// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: api/tool_failure/service.proto

package tool_failure

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ToolFailureCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ToolId        int32                  `protobuf:"varint,1,opt,name=tool_id,json=toolId,proto3" json:"tool_id,omitempty"`
	MasterId      int32                  `protobuf:"varint,2,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	ReasonId      *int32                 `protobuf:"varint,4,opt,name=reason_id,json=reasonId,proto3,oneof" json:"reason_id,omitempty"`
	FailureAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=failure_at,json=failureAt,proto3,oneof" json:"failure_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolFailureCreateRequest) Reset() {
	*x = ToolFailureCreateRequest{}
	mi := &file_api_tool_failure_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolFailureCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolFailureCreateRequest) ProtoMessage() {}

func (x *ToolFailureCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tool_failure_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolFailureCreateRequest.ProtoReflect.Descriptor instead.
func (*ToolFailureCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_tool_failure_service_proto_rawDescGZIP(), []int{0}
}

func (x *ToolFailureCreateRequest) GetToolId() int32 {
	if x != nil {
		return x.ToolId
	}
	return 0
}

func (x *ToolFailureCreateRequest) GetMasterId() int32 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

func (x *ToolFailureCreateRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ToolFailureCreateRequest) GetReasonId() int32 {
	if x != nil && x.ReasonId != nil {
		return *x.ReasonId
	}
	return 0
}

func (x *ToolFailureCreateRequest) GetFailureAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FailureAt
	}
	return nil
}

type ToolFailureCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ToolFailure   *ToolFailure           `protobuf:"bytes,1,opt,name=tool_failure,json=toolFailure,proto3" json:"tool_failure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolFailureCreateResponse) Reset() {
	*x = ToolFailureCreateResponse{}
	mi := &file_api_tool_failure_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolFailureCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolFailureCreateResponse) ProtoMessage() {}

func (x *ToolFailureCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tool_failure_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolFailureCreateResponse.ProtoReflect.Descriptor instead.
func (*ToolFailureCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_tool_failure_service_proto_rawDescGZIP(), []int{1}
}

func (x *ToolFailureCreateResponse) GetToolFailure() *ToolFailure {
	if x != nil {
		return x.ToolFailure
	}
	return nil
}

type ToolFailureAddFixedAtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ToolFailureId int32                  `protobuf:"varint,1,opt,name=tool_failure_id,json=toolFailureId,proto3" json:"tool_failure_id,omitempty"`
	FixedAt       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=fixed_at,json=fixedAt,proto3,oneof" json:"fixed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolFailureAddFixedAtRequest) Reset() {
	*x = ToolFailureAddFixedAtRequest{}
	mi := &file_api_tool_failure_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolFailureAddFixedAtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolFailureAddFixedAtRequest) ProtoMessage() {}

func (x *ToolFailureAddFixedAtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tool_failure_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolFailureAddFixedAtRequest.ProtoReflect.Descriptor instead.
func (*ToolFailureAddFixedAtRequest) Descriptor() ([]byte, []int) {
	return file_api_tool_failure_service_proto_rawDescGZIP(), []int{2}
}

func (x *ToolFailureAddFixedAtRequest) GetToolFailureId() int32 {
	if x != nil {
		return x.ToolFailureId
	}
	return 0
}

func (x *ToolFailureAddFixedAtRequest) GetFixedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FixedAt
	}
	return nil
}

type ToolFailureAddFixedAtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolFailureAddFixedAtResponse) Reset() {
	*x = ToolFailureAddFixedAtResponse{}
	mi := &file_api_tool_failure_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolFailureAddFixedAtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolFailureAddFixedAtResponse) ProtoMessage() {}

func (x *ToolFailureAddFixedAtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tool_failure_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolFailureAddFixedAtResponse.ProtoReflect.Descriptor instead.
func (*ToolFailureAddFixedAtResponse) Descriptor() ([]byte, []int) {
	return file_api_tool_failure_service_proto_rawDescGZIP(), []int{3}
}

type ToolFailureGetAllRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolFailureGetAllRequest) Reset() {
	*x = ToolFailureGetAllRequest{}
	mi := &file_api_tool_failure_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolFailureGetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolFailureGetAllRequest) ProtoMessage() {}

func (x *ToolFailureGetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tool_failure_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolFailureGetAllRequest.ProtoReflect.Descriptor instead.
func (*ToolFailureGetAllRequest) Descriptor() ([]byte, []int) {
	return file_api_tool_failure_service_proto_rawDescGZIP(), []int{4}
}

type ToolFailureGetAllResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ToolFailures  []*ToolFailure         `protobuf:"bytes,1,rep,name=tool_failures,json=toolFailures,proto3" json:"tool_failures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolFailureGetAllResponse) Reset() {
	*x = ToolFailureGetAllResponse{}
	mi := &file_api_tool_failure_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolFailureGetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolFailureGetAllResponse) ProtoMessage() {}

func (x *ToolFailureGetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tool_failure_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolFailureGetAllResponse.ProtoReflect.Descriptor instead.
func (*ToolFailureGetAllResponse) Descriptor() ([]byte, []int) {
	return file_api_tool_failure_service_proto_rawDescGZIP(), []int{5}
}

func (x *ToolFailureGetAllResponse) GetToolFailures() []*ToolFailure {
	if x != nil {
		return x.ToolFailures
	}
	return nil
}

type ToolFailureGetAllReasonsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolFailureGetAllReasonsRequest) Reset() {
	*x = ToolFailureGetAllReasonsRequest{}
	mi := &file_api_tool_failure_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolFailureGetAllReasonsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolFailureGetAllReasonsRequest) ProtoMessage() {}

func (x *ToolFailureGetAllReasonsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tool_failure_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolFailureGetAllReasonsRequest.ProtoReflect.Descriptor instead.
func (*ToolFailureGetAllReasonsRequest) Descriptor() ([]byte, []int) {
	return file_api_tool_failure_service_proto_rawDescGZIP(), []int{6}
}

type ToolFailureGetAllReasonsResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ToolFailureReasons []*ToolFailureReason   `protobuf:"bytes,1,rep,name=tool_failure_reasons,json=toolFailureReasons,proto3" json:"tool_failure_reasons,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ToolFailureGetAllReasonsResponse) Reset() {
	*x = ToolFailureGetAllReasonsResponse{}
	mi := &file_api_tool_failure_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolFailureGetAllReasonsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolFailureGetAllReasonsResponse) ProtoMessage() {}

func (x *ToolFailureGetAllReasonsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tool_failure_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolFailureGetAllReasonsResponse.ProtoReflect.Descriptor instead.
func (*ToolFailureGetAllReasonsResponse) Descriptor() ([]byte, []int) {
	return file_api_tool_failure_service_proto_rawDescGZIP(), []int{7}
}

func (x *ToolFailureGetAllReasonsResponse) GetToolFailureReasons() []*ToolFailureReason {
	if x != nil {
		return x.ToolFailureReasons
	}
	return nil
}

var File_api_tool_failure_service_proto protoreflect.FileDescriptor

var file_api_tool_failure_service_proto_rawDesc = string([]byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x61,
	0x70, 0x69, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x01, 0x0a,
	0x18, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x6f,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x22, 0x59, 0x0a, 0x19, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x6f, 0x6c,
	0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x52, 0x0b, 0x74, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x22, 0x8f, 0x01, 0x0a, 0x1c, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x41, 0x64, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x6f,
	0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x41, 0x64, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x5b, 0x0a, 0x19, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0d, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52,
	0x0c, 0x74, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x22, 0x21, 0x0a,
	0x1f, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x75, 0x0a, 0x20, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x52, 0x12, 0x74, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x32, 0xac, 0x04, 0x0a, 0x12, 0x54, 0x6f, 0x6f, 0x6c,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x5f,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e,
	0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x2d, 0x66, 0x61, 0x69,
	0x6c, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x12, 0x8f, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x41, 0x64, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x41, 0x64, 0x64, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x6f, 0x6f,
	0x6c, 0x2d, 0x66, 0x61, 0x69, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x2f, 0x61, 0x64, 0x64, 0x2d,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x2d, 0x61, 0x74, 0x12, 0x76, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x12, 0x26, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x6f, 0x6f,
	0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x2d, 0x66, 0x61, 0x69, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x93, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x73, 0x12, 0x2d, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x74, 0x6f, 0x6f, 0x6c, 0x2d, 0x66, 0x61, 0x69, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x2f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x6e, 0x5a, 0x6c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x65, 0x72, 0x65, 0x76, 0x65, 0x72, 0x7a, 0x65, 0x76, 0x49,
	0x76, 0x61, 0x6e, 0x2f, 0x72, 0x61, 0x7a, 0x72, 0x61, 0x62, 0x6f, 0x74, 0x6b, 0x61, 0x2d, 0x62,
	0x69, 0x7a, 0x6e, 0x65, 0x73, 0x2d, 0x70, 0x72, 0x69, 0x6c, 0x6f, 0x6a, 0x65, 0x6e, 0x69, 0x69,
	0x2d, 0x6b, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x65, 0x72, 0x73, 0x6b, 0x61, 0x79, 0x61, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x6f, 0x6f,
	0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x3b, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_tool_failure_service_proto_rawDescOnce sync.Once
	file_api_tool_failure_service_proto_rawDescData []byte
)

func file_api_tool_failure_service_proto_rawDescGZIP() []byte {
	file_api_tool_failure_service_proto_rawDescOnce.Do(func() {
		file_api_tool_failure_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_tool_failure_service_proto_rawDesc), len(file_api_tool_failure_service_proto_rawDesc)))
	})
	return file_api_tool_failure_service_proto_rawDescData
}

var file_api_tool_failure_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_tool_failure_service_proto_goTypes = []any{
	(*ToolFailureCreateRequest)(nil),         // 0: tool_failure.ToolFailureCreateRequest
	(*ToolFailureCreateResponse)(nil),        // 1: tool_failure.ToolFailureCreateResponse
	(*ToolFailureAddFixedAtRequest)(nil),     // 2: tool_failure.ToolFailureAddFixedAtRequest
	(*ToolFailureAddFixedAtResponse)(nil),    // 3: tool_failure.ToolFailureAddFixedAtResponse
	(*ToolFailureGetAllRequest)(nil),         // 4: tool_failure.ToolFailureGetAllRequest
	(*ToolFailureGetAllResponse)(nil),        // 5: tool_failure.ToolFailureGetAllResponse
	(*ToolFailureGetAllReasonsRequest)(nil),  // 6: tool_failure.ToolFailureGetAllReasonsRequest
	(*ToolFailureGetAllReasonsResponse)(nil), // 7: tool_failure.ToolFailureGetAllReasonsResponse
	(*timestamppb.Timestamp)(nil),            // 8: google.protobuf.Timestamp
	(*ToolFailure)(nil),                      // 9: tool_failure.ToolFailure
	(*ToolFailureReason)(nil),                // 10: tool_failure.ToolFailureReason
}
var file_api_tool_failure_service_proto_depIdxs = []int32{
	8,  // 0: tool_failure.ToolFailureCreateRequest.failure_at:type_name -> google.protobuf.Timestamp
	9,  // 1: tool_failure.ToolFailureCreateResponse.tool_failure:type_name -> tool_failure.ToolFailure
	8,  // 2: tool_failure.ToolFailureAddFixedAtRequest.fixed_at:type_name -> google.protobuf.Timestamp
	9,  // 3: tool_failure.ToolFailureGetAllResponse.tool_failures:type_name -> tool_failure.ToolFailure
	10, // 4: tool_failure.ToolFailureGetAllReasonsResponse.tool_failure_reasons:type_name -> tool_failure.ToolFailureReason
	0,  // 5: tool_failure.ToolFailureService.Create:input_type -> tool_failure.ToolFailureCreateRequest
	2,  // 6: tool_failure.ToolFailureService.AddFixedAt:input_type -> tool_failure.ToolFailureAddFixedAtRequest
	4,  // 7: tool_failure.ToolFailureService.GetAll:input_type -> tool_failure.ToolFailureGetAllRequest
	6,  // 8: tool_failure.ToolFailureService.GetAllReasons:input_type -> tool_failure.ToolFailureGetAllReasonsRequest
	1,  // 9: tool_failure.ToolFailureService.Create:output_type -> tool_failure.ToolFailureCreateResponse
	3,  // 10: tool_failure.ToolFailureService.AddFixedAt:output_type -> tool_failure.ToolFailureAddFixedAtResponse
	5,  // 11: tool_failure.ToolFailureService.GetAll:output_type -> tool_failure.ToolFailureGetAllResponse
	7,  // 12: tool_failure.ToolFailureService.GetAllReasons:output_type -> tool_failure.ToolFailureGetAllReasonsResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_tool_failure_service_proto_init() }
func file_api_tool_failure_service_proto_init() {
	if File_api_tool_failure_service_proto != nil {
		return
	}
	file_api_tool_failure_models_proto_init()
	file_api_tool_failure_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_api_tool_failure_service_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_tool_failure_service_proto_rawDesc), len(file_api_tool_failure_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_tool_failure_service_proto_goTypes,
		DependencyIndexes: file_api_tool_failure_service_proto_depIdxs,
		MessageInfos:      file_api_tool_failure_service_proto_msgTypes,
	}.Build()
	File_api_tool_failure_service_proto = out.File
	file_api_tool_failure_service_proto_goTypes = nil
	file_api_tool_failure_service_proto_depIdxs = nil
}
